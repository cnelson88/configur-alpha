{"version":3,"sources":["components/google-maps/Maps.tsx","components/styles/grid.js","components/user-details/UserDetails.tsx","components/styles/table.js","components/search/SearchResults.tsx","components/styles/pagination.js","components/search/DefaultData.js","components/styles/input.js","components/search/Search.tsx","images/logo.png","pages/home.tsx","App.js","reportWebVitals.js","index.js"],"names":["Maps","mapDetails","userDetails","queryResults","geoLat","address","geo","lat","geoLng","lng","ref","useGoogleMaps","center","Math","round","zoom","style","width","height","Grid","styled","div","UserDetails","className","src","name","phone","email","website","suite","street","city","zipcode","company","bs","catchPhrase","Table","table","SearchResults","useState","userInfo","setUserInfo","length","handleClick","map","item","index","username","onClick","Pagination","DefaultData","offset","setOffset","data","setData","perPage","pageCount","setPageCount","getData","a","axios","get","res","slice","postData","pd","key","ceil","useEffect","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","Input","input","Search","searchQuery","setSearchQuery","setQueryResults","fetch","then","response","json","filter","value","includes","handleChange","casing","target","casingUpper","charAt","toUpperCase","clearInput","type","placeholder","onChange","onFocus","Home","Logo","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45dc3600.chunk.js","sourcesContent":["import { useGoogleMaps } from \"react-hook-google-maps\";\r\n\r\nconst Maps = (mapDetails: any) => {\r\n    const userDetails = mapDetails.mapDetails.queryResults.queryResults[0];\r\n    const geoLat = userDetails.address.geo.lat;\r\n    const geoLng = userDetails.address.geo.lng;\r\n\r\n    const { ref } = useGoogleMaps(\r\n        \"AIzaSyDotwU2adiNnkpHLGk5Rf9HE0qBUj9YReQ\",\r\n        {\r\n            center: { lat: Math.round(geoLat), lng: Math.round(geoLng) },\r\n            zoom: 3,\r\n        },\r\n    );\r\n\r\n    return <div ref={ref} style={{ width: 800, height: 300 }} />;\r\n}\r\n\r\nexport default Maps;","import styled from 'styled-components';\r\n\r\nconst Grid = styled.div`\r\n    .user-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        border-radius: 25px;\r\n        background-color: #ffffff;\r\n\r\n        padding: 25px;\r\n        width: 100%;\r\n\r\n        img {\r\n            border-radius: 20%;\r\n            max-width: 200px;\r\n        }\r\n\r\n        &__header {\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: center;\r\n            \r\n            h3 {\r\n                margin: 0;\r\n            }\r\n\r\n            &--img {\r\n                margin-left: 220px;\r\n            }\r\n        }\r\n\r\n        &__info {\r\n            margin-bottom: 50px;\r\n            align-items: flex-start;\r\n\r\n            img {\r\n                padding: 30px 0px;\r\n            }\r\n\r\n            p, h3 {\r\n                margin: 0;\r\n                font-weight: 100;\r\n                color: #808080;\r\n            }\r\n        }\r\n    }\r\n\r\n    .user-container-info {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-template-rows: 1fr;\r\n\r\n        p {\r\n            margin: 0;\r\n        }\r\n\r\n        &__maps {\r\n            display: flex;\r\n            justify-content: center;\r\n            padding: 80px;\r\n        }\r\n    }  \r\n`\r\nexport { Grid };","import Maps from '../google-maps/Maps';\r\nimport { Grid } from '../styles/grid';\r\n\r\nconst UserDetails = (queryResults: any) => {\r\n    const userDetails = queryResults.queryResults;\r\n\r\n    const userinfo = () => {\r\n        return (\r\n            <Grid>\r\n                <div className='user-container'>\r\n                    <div className='user-container user-container__header'>\r\n                        <img className='user-container__header--img' src='https://www.configur.tech/wp-content/uploads/2020/12/Staff2.png' />\r\n                        <div className='user-container user-container__info'>\r\n                            <h1>{userDetails.queryResults[0].name}</h1>\r\n                            <h3><b>Phone:</b> {userDetails.queryResults[0].phone}</h3>\r\n                            <img src='https://www.configur.tech/wp-content/uploads/2020/12/Squiggles1.png' />\r\n                            <h3><b>Email:</b> {userDetails.queryResults[0].email}</h3>\r\n                            <h3><b>Website:</b> {userDetails.queryResults[0].website}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className='user-container-info'>\r\n                        <div>\r\n                            <img src='https://www.configur.tech/wp-content/uploads/2020/12/Squiggles1.png' />\r\n                            <h3>Address</h3>\r\n                            <p><b>Suite:</b> {userDetails.queryResults[0].address.suite}</p>\r\n                            <p><b>Street:</b> {userDetails.queryResults[0].address.street}</p>\r\n                            <p><b>City:</b> {userDetails.queryResults[0].address.city}</p>\r\n                            <p><b>Zipcode:</b> {userDetails.queryResults[0].address.zipcode}</p>           \r\n                        </div>\r\n                        <div>\r\n                        <img src='https://www.configur.tech/wp-content/uploads/2020/12/squiggles2.png' />\r\n                            <h3>Company</h3>\r\n                            <p><b>Name:</b> {userDetails.queryResults[0].company.name}</p>\r\n                            <p><b>BS:</b> {userDetails.queryResults[0].company.bs}</p>\r\n                            <p><b>Catch Phrase:</b> {userDetails.queryResults[0].company.catchPhrase}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='user-container-info__maps'>\r\n                        <Maps mapDetails={queryResults} />\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {userinfo()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetails;","import styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    border-collapse: collapse;\r\n    border-radius: 1em;\r\n    overflow: hidden;\r\n\r\n    tbody {\r\n        background-color: lightgray;\r\n    }\r\n\r\n    th {\r\n        text-align: left;\r\n        padding: 30px;\r\n        background-color: #2BB297;\r\n    }\r\n\r\n    td {\r\n        padding: 30px;\r\n    }\r\n\r\n    tbody:nth-of-type(odd) {\r\n        background-color: white;\r\n    }\r\n\r\n    .row-click {\r\n        cursor: pointer;\r\n    }\r\n`\r\nexport { Table };","import React, { useState } from 'react';\r\nimport UserDetails from '../user-details/UserDetails';\r\nimport { Table } from '../styles/table';\r\n\r\nconst SearchResults = (queryResults: any) => {\r\n    const [userInfo, setUserInfo] = useState<Boolean>(false);\r\n\r\n    if (queryResults.length === 0) {\r\n        return <p>No results found.</p>;\r\n    }\r\n\r\n    const results = () => {\r\n        return (\r\n            <>\r\n                <Table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                            <th>Website</th>\r\n                            <th>More</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {queryResults.queryResults.map((item: any, index: any) => (\r\n                        <tbody key={index} >\r\n                            <tr>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.username}</td>\r\n                                <td>{item.email}</td>    \r\n                                <td>{item.phone}</td>\r\n                                <td>{item.website}</td>  \r\n                                <td className='row-click' onClick={handleClick}>...</td>                                \r\n                            </tr>\r\n                        </tbody>\r\n                    ))}\r\n                </Table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setUserInfo(true);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {userInfo === true ? <UserDetails queryResults={queryResults} /> : results()}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SearchResults;","import styled from 'styled-components';\r\n\r\nconst Pagination = styled.div`\r\n    .pagination {\r\n        margin: 65px auto;\r\n        display: flex;\r\n        list-style: none;\r\n        outline: none;\r\n    }\r\n\r\n    .pagination > .active > a {\r\n        background-color: #2BB297;\r\n        border-color: #47ccde ;\r\n        color: #fff;\r\n    }\r\n\r\n    .pagination > li > a {  \r\n        padding: 5px 10px;\r\n        outline: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .pagination > li > a, .pagination > li > span {\r\n        color: #000000;\r\n    }\r\n`\r\nexport { Pagination };","import { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport Paginate from 'react-paginate';\r\n\r\nimport { Table } from '../styles/table';\r\nimport { Pagination } from '../styles/pagination';\r\n\r\nconst DefaultData = () => {\r\n    const [offset, setOffset] = useState(0);\r\n    const [data, setData] = useState([]);\r\n    const [perPage] = useState(5);\r\n    const [pageCount, setPageCount] = useState(0)\r\n\r\n    const getData = async() => {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        const data = res.data;  \r\n        const slice = data.slice(offset, offset + perPage);\r\n        const postData = \r\n                    <Table className='table table__default'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Username</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Website</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {slice.map((pd, key) => \r\n                        <tbody>\r\n                            <tr key={key}>\r\n                                <td>{pd.name}</td>\r\n                                <td>{pd.username}</td>\r\n                                <td>{pd.email}</td>\r\n                                <td>{pd.phone}</td>\r\n                                <td>{pd.website}</td>\r\n                            </tr>\r\n                        </tbody>)}\r\n                    </Table>\r\n            \r\n        setData(postData)\r\n        setPageCount(Math.ceil(data.length / perPage))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [offset])\r\n\r\n    const handlePageClick = e => {\r\n        const selectedPage = e.selected;\r\n        \r\n        setOffset(selectedPage + 1)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {data}\r\n            <Pagination>\r\n                <Paginate \r\n                    previousLabel={'Prev'}\r\n                    nextLabel={'Next'}\r\n                    breakLabel={'...'}          \r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={'pagination'}\r\n                    subContainerClassName={'pages pagination'}\r\n                    activeClassName={'active'}\r\n                />\r\n            </Pagination>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DefaultData;","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n    font-family: 'Poppins', sans-serif;\r\n    box-shadow: 12px 12px 2px 1px rgba(0, 0, 0, 0.2);\r\n    \r\n    width: 60%;\r\n    padding: 15px;\r\n    text-align: left;\r\n\r\n    border-radius: 10px;\r\n    border: none;\r\n`\r\nexport { Input };","import React, { useEffect, useState } from 'react';\r\nimport SearchResults from './SearchResults';\r\nimport DefaultData from './DefaultData';\r\n\r\nimport { Input } from '../styles/input';\r\n\r\nconst Search = () => {\r\n    const [searchQuery, setSearchQuery] = useState<string>('');    \r\n    const [queryResults, setQueryResults] = useState<Array<string | number>>([]);\r\n\r\n    useEffect(() => {\r\n        setSearchQuery(searchQuery);              \r\n    });\r\n\r\n    useEffect(() => {\r\n            if (searchQuery.length > 0) {\r\n                const apiUrl = 'https://jsonplaceholder.typicode.com/users';\r\n                \r\n                fetch(apiUrl)\r\n                    .then((response) => response.json())\r\n                    .then((response) => {\r\n                        response.filter((value: any) => {\r\n                            if(value.name.includes(searchQuery)) {\r\n                                return setQueryResults([ ...queryResults, value ]);\r\n                            } else if (value.username.includes(searchQuery)) {\r\n                                return setQueryResults([ ...queryResults, value ]);\r\n                            }\r\n                        })    \r\n                    });\r\n            }\r\n    }, [searchQuery]);\r\n\r\n    const searchInput = () => {\r\n        return (\r\n            <>\r\n                <Input\r\n                    type='text'\r\n                    placeholder='Please enter a name...'\r\n                    value={searchQuery}\r\n                    onChange={handleChange}\r\n                    onFocus={clearInput}\r\n                />       \r\n            </>\r\n        )\r\n    };\r\n\r\n    const handleChange = (e: any) => {\r\n        const casing = e.target.value;\r\n        const casingUpper = casing.charAt(0).toUpperCase() + casing.slice(1);\r\n\r\n        setSearchQuery(casingUpper);\r\n        setQueryResults([]);\r\n    };\r\n\r\n    const clearInput = () => {\r\n        setSearchQuery('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {searchInput()}\r\n            {queryResults.length > 0 ? <SearchResults queryResults={queryResults} /> : <DefaultData />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/logo.bd400292.png\";","import React from 'react';\r\nimport Search from '../components/search/Search';\r\nimport Logo from '../images/logo.png';\r\n\r\nimport './home.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='page-container'>\r\n            <div>\r\n                <img src={Logo} alt='' />\r\n            </div>\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import Home from './pages/home';\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <Home />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}